function  jobs = job_dartel_normalize(template,flow_field,images,par)
% job_dartel_normalize:  SPM:Tools:DartelTools:Normalise to MNIspace

% Inputs :
%     template   : the final template generated by Dartel "create Templates" (job_do_dartel_template)
%                  one file will be selected 
%     flow_field : the files generated by Dartel create Templates (job_do_dartel_template) [u_ ] for each subject
%     images     : images to normalize for each subject 
%                  to selecte more then one use "get_subdir_regex_files"
%     par        : parameters 
%
% Outputs :
%     jobs       : SPM structure
%
%     Output using Object :
%           add Volumes to exam object with tag : "smw[sw]namefile"
%
%
% https://www.fil.ion.ucl.ac.uk/spm/doc/spm12_manual.pdf
%

if ~exist('par','var')
  par='';
end

obj = 0;
if isa(images,'volume')
    obj = 1;
    volumeArray  = images;
    images       = volumeArray.getPath;
    flow_field   = flow_field.getPath;
    template     = template.getPath;
    
end


template   = cellstr(char(template));
flow_field = cellstr(char(flow_field));
images     = cellstr((images));
assert(~any(size(flow_field)-size(images)), 'Flow field and Images inputs must have the same size');



defpar.preserve = 0;              % 0 : no modulation (Preserving Concentrations) [sw ] / 1: modulation (Preserve Amount) [smw ]
defpar.fwhm     = [8 8 8];        % Gaussian (in mm)  smoothing

defpar.vox      = [NaN NaN NaN]; 
defpar.bb       = [NaN NaN NaN
                   NaN NaN NaN];
              
              
defpar.sge   = 0;
defpar.run = 0;
defpar.display=0;
defpar.jobname='spm_to_MNI';
defpar.walltime = '06:00:00';
defpar.auto_add_obj = 0;

par = complet_struct(par,defpar);






for nbr = 1:length(images)
    
    jobs{nbr}.spm.tools.dartel.mni_norm.template = template;
    jobs{nbr}.spm.tools.dartel.mni_norm.data.subj.flowfield = flow_field(nbr);
    jobs{nbr}.spm.tools.dartel.mni_norm.data.subj.images = cellstr(images{nbr});
    jobs{nbr}.spm.tools.dartel.mni_norm.vox = par.vox;
    jobs{nbr}.spm.tools.dartel.mni_norm.bb = par.bb;
    jobs{nbr}.spm.tools.dartel.mni_norm.preserve = par.preserve;
    jobs{nbr}.spm.tools.dartel.mni_norm.fwhm = par.fwhm;
    
    
end

jobs  = job_ending_rountines( jobs, [], par );


% add volume to exam obj using images object

if obj && par.auto_add_obj

    if par.preserve
        prefix = 'smw';
    else
        prefix = 'sw' ;
    end
     
  
    serie  = volumeArray.getSerie;
    npath = addprefixtofilenames(volumeArray.getPath(),prefix);

    for nvol = 1:length(npath)
        pp = cellstr(npath{nvol});
        [~,name] = get_parent_path(pp,1);
        for ivol= 1:length(pp)
            serie(nvol).addVolume('root',pp{ivol},strrep(name{ivol},'.nii',''));
        end
    end
    
  
   
end   
    


end 
